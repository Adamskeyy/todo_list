{"version":3,"sources":["components/Button/Button.js","components/Form/Form.js","components/TaskList/Task/Task.js","components/TaskList/TaskList.js","App.js","index.js"],"names":["Button","type","className","Form","addTask","useState","task","setTask","autoComplete","onSubmit","e","preventDefault","htmlFor","required","id","placeholder","value","onChange","target","Task","removeTask","idx","toggleCompletion","name","onClick","completed","TaskList","tasks","map","index","App","setTasks","useEffect","tasksFromLocalStorage","localStorage","getItem","JSON","parse","setItem","stringify","aria-hidden","newTask","uuid_v4","newTasks","filter","findIndex","updatedTasks","toggledTask","ReactDOM","render","document","getElementById"],"mappings":"kRAaeA,G,YAVA,WACb,OACE,yBAAQC,KAAK,SAASC,UAAU,MAAhC,UACE,sBAAMA,UAAU,eAAhB,8BACA,sBAAMA,UAAU,gBAChB,sBAAMA,UAAU,aAAhB,sBC8BSC,G,MAhCF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACJC,mBAAS,IADL,mBACrBC,EADqB,KACfC,EADe,KAW5B,OACE,uBAAMC,aAAa,MAAMC,SATR,SAACC,GAClBA,EAAEC,iBACEL,IACFF,EAAQE,GACRC,EAAQ,MAKqCL,UAAU,gBAAzD,UACE,wBAAOU,QAAQ,QAAQV,UAAU,cAAjC,UACE,uBACEW,UAAQ,EACRZ,KAAK,OACLa,GAAG,QACHC,YAAY,OACZC,MAAOV,EACPW,SAAU,SAACP,GACTH,EAAQG,EAAEQ,OAAOF,UAGrB,sBAAMd,UAAU,QAAhB,qCACA,sBAAMA,UAAU,gBAElB,cAAC,EAAD,SCPSiB,G,YAvBF,SAAC,GAAiD,IAA/Cb,EAA8C,EAA9CA,KAAMc,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,IAAKC,EAAuB,EAAvBA,iBACrC,OACE,qBAAIpB,UAAU,aAAd,UACE,uBAAMA,UAAU,sBAAhB,UAAuCI,EAAKiB,KAA5C,OACA,sBAAMrB,UAAU,oBAAhB,SAAqCmB,EAAM,IAC3C,uBAAMnB,UAAU,uBAAhB,UACE,sBACEA,UAAU,yCACVsB,QAAS,kBAAMF,EAAiBhB,EAAKQ,KAFvC,SAIGR,EAAKmB,UAAY,OAAS,eAE7B,sBACEvB,UAAU,+BACVsB,QAAS,kBAAMJ,EAAWd,EAAKQ,KAFjC,uBCKOY,EAhBE,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOP,EAAmC,EAAnCA,WAAYE,EAAuB,EAAvBA,iBACrC,OACE,oBAAIpB,UAAU,aAAd,SACGyB,EAAMC,KAAI,SAACtB,EAAMuB,GAAP,OACT,cAAC,EAAD,CAEEvB,KAAMA,EACNc,WAAYA,EACZE,iBAAkBA,EAClBD,IAAKQ,GAJAvB,EAAKQ,UCoDLgB,MAtDf,WAAgB,IAAD,EACazB,mBAAS,IADtB,mBACNsB,EADM,KACCI,EADD,KAqCb,OAlCAC,qBAAU,WACR,IAAMC,EAAwBC,aAAaC,QAAQ,SAC/CF,GACFF,EAASK,KAAKC,MAAMJ,MAErB,IAEHD,qBAAU,WACRE,aAAaI,QAAQ,QAASF,KAAKG,UAAUZ,MAC5C,CAACA,IA0BF,sBAAKzB,UAAU,MAAf,UACE,qBAAIA,UAAU,iBAAd,UACE,sBAAMsC,cAAY,OAAlB,wBADF,aAGE,sBAAMA,cAAY,OAAlB,2BAEF,cAAC,EAAD,CAAMpC,QA9BM,SAACE,GACf,IAAMmC,EAAU,CACd3B,GAAI4B,cACJnB,KAAMjB,EACNmB,WAAW,GAEbM,EAAS,GAAD,mBAAKJ,GAAL,CAAYc,QAyBlB,cAAC,EAAD,CACEd,MAAOA,EACPP,WAxBa,SAACN,GAClB,IAAM6B,EAAWhB,EAAMiB,QAAO,SAACtC,GAAD,OAAUA,EAAKQ,KAAOA,KACpDiB,EAASY,IAuBLrB,iBApBa,SAACR,GAClB,IAAMe,EAAQF,EAAMkB,WAAU,SAACvC,GAAD,OAAUA,EAAKQ,KAAOA,KAC9CgC,EAAY,YAAOnB,GACnBoB,EAAW,eAAQpB,EAAME,IAC/BkB,EAAYtB,WAAasB,EAAYtB,UACrCqB,EAAajB,GAASkB,EACtBhB,EAASe,UCrCbE,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.b3b4864a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Button.css\";\r\n\r\nconst Button = () => {\r\n  return (\r\n    <button type=\"submit\" className=\"btn\">\r\n      <span className=\"btn__content\">Create new task_</span>\r\n      <span className=\"btn__glitch\"></span>\r\n      <span className=\"btn__label\">r25</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nimport Button from \"../Button/Button\";\r\nimport \"./Form.css\";\r\n\r\nconst Form = ({ addTask }) => {\r\n  const [task, setTask] = useState(\"\");\r\n\r\n  const submitTask = (e) => {\r\n    e.preventDefault();\r\n    if (task) {\r\n      addTask(task);\r\n      setTask(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form autoComplete=\"off\" onSubmit={submitTask} className=\"form__control\">\r\n      <label htmlFor=\"input\" className=\"form__input\">\r\n        <input\r\n          required\r\n          type=\"text\"\r\n          id=\"input\"\r\n          placeholder=\"&nbsp;\"\r\n          value={task}\r\n          onChange={(e) => {\r\n            setTask(e.target.value);\r\n          }}\r\n        />\r\n        <span className=\"label\">Add the task samurai...</span>\r\n        <span className=\"focus-bg\"></span>\r\n      </label>\r\n      <Button />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport \"./Task.css\";\r\n\r\nconst Task = ({ task, removeTask, idx, toggleCompletion }) => {\r\n  return (\r\n    <li className=\"task__item\">\r\n      <span className=\"task__item__content\">{task.name}_</span>\r\n      <span className=\"task__item__label\">{idx + 1}</span>\r\n      <span className=\"task__item__controls\">\r\n        <span\r\n          className=\"task__item__controls__toggleCompletion\"\r\n          onClick={() => toggleCompletion(task.id)}\r\n        >\r\n          {task.completed ? \"DONE\" : \"PENDING...\"}\r\n        </span>\r\n        <span\r\n          className=\"task__item__controls__remove\"\r\n          onClick={() => removeTask(task.id)}\r\n        >\r\n          X\r\n        </span>\r\n      </span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport \"./TaskList.css\";\r\nimport Task from \"./Task/Task\";\r\n\r\nconst TaskList = ({ tasks, removeTask, toggleCompletion }) => {\r\n  return (\r\n    <ul className=\"task__list\">\r\n      {tasks.map((task, index) => (\r\n        <Task\r\n          key={task.id}\r\n          task={task}\r\n          removeTask={removeTask}\r\n          toggleCompletion={toggleCompletion}\r\n          idx={index}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import { useState, useEffect } from \"react\";\r\nimport { v4 as uuid_v4 } from \"uuid\";\r\n\r\nimport \"./App.css\";\r\nimport Form from \"./components/Form/Form\";\r\nimport TaskList from \"./components/TaskList/TaskList\";\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const tasksFromLocalStorage = localStorage.getItem(\"tasks\");\r\n    if (tasksFromLocalStorage) {\r\n      setTasks(JSON.parse(tasksFromLocalStorage));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const addTask = (task) => {\r\n    const newTask = {\r\n      id: uuid_v4(),\r\n      name: task,\r\n      completed: false,\r\n    };\r\n    setTasks([...tasks, newTask]);\r\n  };\r\n\r\n  const deleteTask = (id) => {\r\n    const newTasks = tasks.filter((task) => task.id !== id);\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  const toggleTask = (id) => {\r\n    const index = tasks.findIndex((task) => task.id === id);\r\n    const updatedTasks = [...tasks];\r\n    const toggledTask = { ...tasks[index] };\r\n    toggledTask.completed = !toggledTask.completed;\r\n    updatedTasks[index] = toggledTask;\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"header__glitch\">\r\n        <span aria-hidden=\"true\">TO DO LIST</span>\r\n        TO DO LIST\r\n        <span aria-hidden=\"true\">TO DO LIST</span>\r\n      </h1>\r\n      <Form addTask={addTask} />\r\n      <TaskList\r\n        tasks={tasks}\r\n        removeTask={deleteTask}\r\n        toggleCompletion={toggleTask}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}