{"version":3,"sources":["components/Header/Header.js","components/Buttons/MainButton/MainButton.js","components/Form/Form.js","components/TaskList/Task/Task.js","components/TaskList/TaskList.js","components/Buttons/FilterButton/FilterButton.js","components/Search/Search.js","components/Buttons/DeleteButton/DeleteButton.js","App.js","index.js"],"names":["Header","className","aria-hidden","MainButton","btnContent","labelContent","typeOfBtn","type","Form","addTask","useState","task","setTask","autoComplete","onSubmit","e","preventDefault","htmlFor","required","id","placeholder","value","onChange","target","Task","completionStatusText","taskItemClasses","removeTask","idx","toggleCompletion","completed","name","onClick","TaskList","tasks","map","index","FilterButton","clicked","isBtnActive","defaultActiveFilter","Search","React","memo","enteredFilter","displayFilteredTasks","changeActiveFilter","toLocaleLowerCase","DeleteButton","App","setTasks","setDefaultActiveFilter","setEnteredFilter","useEffect","tasksFromLocalStorage","localStorage","getItem","JSON","parse","setItem","stringify","length","itemsToDisplay","searchTab","filterWarning","deleteBtn","filteredTasks","filter","includes","selectedTasks","tasksLeft","item","some","other","deleteTasks","newTask","uuid_v4","newTasks","findIndex","updatedTasks","toggledTask","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b83132e4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './Header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <h1 className=\"header__glitch\">\r\n            <span aria-hidden=\"true\">TO DO LIST</span>\r\n            TO DO LIST\r\n            <span aria-hidden=\"true\">TO DO LIST</span>\r\n      </h1>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\";\r\nimport \"./MainButton.css\";\r\n\r\nconst MainButton = ({ btnContent, labelContent, typeOfBtn }) => {\r\n  return (\r\n    <button type=\"submit\" className={typeOfBtn}>\r\n      <span className=\"btn__content\">{btnContent}</span>\r\n      <span className=\"btn__glitch\"></span>\r\n      <span className=\"btn__label\">{labelContent}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default MainButton;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nimport MainButton from \"../Buttons/MainButton/MainButton\";\r\nimport \"./Form.css\";\r\n\r\nconst Form = ({ addTask }) => {\r\n  const [task, setTask] = useState(\"\");\r\n\r\n  const submitTask = (e) => {\r\n    e.preventDefault();\r\n    if (task) {\r\n      addTask(task);\r\n      setTask(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form autoComplete=\"off\" onSubmit={submitTask} className=\"form__control\">\r\n      <label htmlFor=\"input\" className=\"form__input\">\r\n        <input\r\n          required\r\n          type=\"text\"\r\n          id=\"input\"\r\n          placeholder=\"&nbsp;\"\r\n          value={task}\r\n          onChange={(e) => {\r\n            setTask(e.target.value);\r\n          }}\r\n        />\r\n        <span className=\"label\">Add the task samurai...</span>\r\n        <span className=\"focus-bg\"></span>\r\n      </label>\r\n      <MainButton\r\n        btnContent=\"create new task_\"\r\n        labelContent=\"r25\"\r\n        typeOfBtn=\"btn\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport \"./Task.css\";\r\n\r\nconst Task = ({ task, removeTask, idx, toggleCompletion }) => {\r\n\r\n  let completionStatusText, taskItemClasses;\r\n  if (task.completed) {\r\n    completionStatusText = 'DONE'\r\n    taskItemClasses = 'task__item completed'\r\n  } else {\r\n    completionStatusText = 'ACTIVE'\r\n    taskItemClasses = 'task__item'\r\n  }\r\n\r\n  return (\r\n    <li className={taskItemClasses}>\r\n      <span className=\"task__item__content\">{task.name}</span>\r\n      <span className=\"task__item__label\">{idx + 1}</span>\r\n      <span className=\"task__item__controls\">\r\n        <span\r\n          className='task__item__controls__toggleCompletion'\r\n          onClick={() => toggleCompletion(task.id)}\r\n        >\r\n          {completionStatusText}\r\n        </span>\r\n        <span\r\n          className=\"task__item__controls__remove\"\r\n          onClick={() => removeTask(task.id)}\r\n        >\r\n          X\r\n        </span>\r\n      </span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport \"./TaskList.css\";\r\nimport Task from \"./Task/Task\";\r\n\r\nconst TaskList = ({ tasks, removeTask, toggleCompletion }) => {\r\n  return (\r\n    <ul className=\"task__list\">\r\n      {tasks.map((task, index) => (\r\n        <Task\r\n          key={task.id}\r\n          task={task}\r\n          removeTask={removeTask}\r\n          toggleCompletion={toggleCompletion}\r\n          idx={index}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React from \"react\";\r\nimport \"./FilterButton.css\";\r\n\r\nconst FilterButton = ({\r\n  btnContent,\r\n  labelContent,\r\n  clicked,\r\n  defaultActiveFilter,\r\n}) => {\r\n  let isBtnActive = \"\";\r\n  if (defaultActiveFilter === btnContent) {\r\n    isBtnActive = \"active\";\r\n  }\r\n\r\n  return (\r\n    <button\r\n      type=\"submit\"\r\n      className={`btn--secondary ${isBtnActive}`}\r\n      onClick={clicked}\r\n    >\r\n      <span className={`btn__content ${isBtnActive}`}>{btnContent}</span>\r\n      <span className=\"btn__label\">{labelContent}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FilterButton;\r\n","import React from \"react\";\r\n\r\nimport \"./Search.css\";\r\nimport FilterButton from \"../Buttons/FilterButton/FilterButton\";\r\n\r\nconst Search = React.memo(\r\n  ({\r\n    enteredFilter,\r\n    displayFilteredTasks,\r\n    defaultActiveFilter,\r\n    changeActiveFilter,\r\n  }) => {\r\n    return (\r\n      <>\r\n        <form\r\n          autoComplete=\"off\"\r\n          className=\"form__control\"\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n          }}\r\n        >\r\n          <label htmlFor=\"input search\" className=\"form__input\">\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              id=\"input search\"\r\n              placeholder=\"&nbsp;\"\r\n              value={enteredFilter}\r\n              onChange={(e) => {\r\n                displayFilteredTasks(e.target.value.toLocaleLowerCase());\r\n              }}\r\n            />\r\n            <span className=\"label\">Find task...</span>\r\n            <span className=\"focus-bg\"></span>\r\n          </label>\r\n        </form>\r\n        <div className=\"filter__buttons\">\r\n          <FilterButton\r\n            btnContent=\"all\"\r\n            labelContent=\"r26\"\r\n            defaultActiveFilter={defaultActiveFilter}\r\n            clicked={() => changeActiveFilter(\"all\")}\r\n          />\r\n          <FilterButton\r\n            btnContent=\"active\"\r\n            labelContent=\"r27\"\r\n            defaultActiveFilter={defaultActiveFilter}\r\n            clicked={() => changeActiveFilter(\"active\")}\r\n          />\r\n          <FilterButton\r\n            btnContent=\"done\"\r\n            labelContent=\"r28\"\r\n            defaultActiveFilter={defaultActiveFilter}\r\n            clicked={() => changeActiveFilter(\"done\")}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport \"./DeleteButton.css\";\r\n\r\nconst DeleteButton = ({ btnContent, labelContent, clicked }) => {\r\n  return (\r\n    <button type=\"submit\" className=\"btn--delete\" onClick={clicked}>\r\n      <span className=\"btn__content\">{btnContent}</span>\r\n      <span className=\"btn__glitch\"></span>\r\n      <span className=\"btn__label\">{labelContent}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default DeleteButton;\r\n","import { useState, useEffect } from \"react\";\r\nimport { v4 as uuid_v4 } from \"uuid\";\r\n\r\nimport \"./App.css\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Form from \"./components/Form/Form\";\r\nimport TaskList from \"./components/TaskList/TaskList\";\r\nimport Search from \"./components/Search/Search\";\r\nimport DeleteButton from \"./components/Buttons/DeleteButton/DeleteButton\";\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [defaultActiveFilter, setDefaultActiveFilter] = useState(\"all\");\r\n  const [enteredFilter, setEnteredFilter] = useState(\"\");\r\n\r\n  // Get tasks from local storage if there are any\r\n  useEffect(() => {\r\n    const tasksFromLocalStorage = localStorage.getItem(\"tasks\");\r\n    if (tasksFromLocalStorage) {\r\n      setTasks(JSON.parse(tasksFromLocalStorage));\r\n    }\r\n  }, []);\r\n\r\n  // Set tasks in local storage anytime their numbers changes and reset filters if there are no tasks left\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n    if (!tasks.length) {\r\n      setEnteredFilter(\"\");\r\n      setDefaultActiveFilter(\"all\");\r\n    }\r\n  }, [tasks]);\r\n\r\n  // Add Task\r\n  const addTask = (task) => {\r\n    const newTask = {\r\n      id: uuid_v4(),\r\n      name: task,\r\n      completed: false,\r\n    };\r\n    setTasks([...tasks, newTask]);\r\n  };\r\n\r\n  // Delete Task\r\n  const deleteTask = (id) => {\r\n    const newTasks = tasks.filter((task) => task.id !== id);\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  // Delete selected tasks\r\n  const deleteTasks = (selectedTasks) => {\r\n    const tasksLeft = [...tasks].filter(\r\n      (item) => !selectedTasks.some((other) => item.id === other.id)\r\n    );\r\n    setTasks(tasksLeft);\r\n  };\r\n\r\n  // Toggle completion state\r\n  const toggleTask = (id) => {\r\n    const index = tasks.findIndex((task) => task.id === id);\r\n    const updatedTasks = [...tasks];\r\n    const toggledTask = { ...tasks[index] };\r\n    toggledTask.completed = !toggledTask.completed;\r\n    updatedTasks[index] = toggledTask;\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  // Filtering tasks\r\n  const filteredTasks = tasks.filter((task) => {\r\n    return task.name.toLocaleLowerCase().includes(enteredFilter);\r\n  });\r\n\r\n  let itemsToDisplay;\r\n\r\n  if (defaultActiveFilter === \"all\") {\r\n    itemsToDisplay = filteredTasks;\r\n  } else if (defaultActiveFilter === \"done\") {\r\n    itemsToDisplay = filteredTasks.filter((task) => task.completed);\r\n  } else {\r\n    itemsToDisplay = filteredTasks.filter((task) => !task.completed);\r\n  }\r\n\r\n  // Show searchbar if there is at least 1 task\r\n  let searchTab, filterWarning, deleteBtn;\r\n  if (tasks.length > 0) {\r\n    searchTab = (\r\n      <Search\r\n        defaultActiveFilter={defaultActiveFilter}\r\n        changeActiveFilter={(filter) => setDefaultActiveFilter(filter)}\r\n        enteredFilter={enteredFilter}\r\n        displayFilteredTasks={(filter) => setEnteredFilter(filter)}\r\n      />\r\n    );\r\n  }\r\n\r\n  // Show warning message if there are no matches found through filters and there are still tasks to display with different filters\r\n  if (!itemsToDisplay.length && tasks.length) {\r\n    filterWarning = <p>No matches found</p>;\r\n  }\r\n\r\n  // Render delete button if there are any selected tasks\r\n  deleteBtn = itemsToDisplay.length ? (\r\n    <DeleteButton\r\n      btnContent=\"delete selected tasks_\"\r\n      labelContent=\"r29\"\r\n      clicked={() => deleteTasks(itemsToDisplay)}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Form addTask={addTask} />\r\n      {searchTab}\r\n      {filterWarning}\r\n      <TaskList\r\n        tasks={itemsToDisplay}\r\n        removeTask={deleteTask}\r\n        toggleCompletion={toggleTask}\r\n      />\r\n      {deleteBtn}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}