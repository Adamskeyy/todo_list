{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Navbar/Navigation.js","components/Auth/SignUp/SignUp.js","components/Auth/LogIn/LogIn.js","components/Auth/LogOut/LogOut.js","components/Profile/Profile.js","components/UpdateProfile/UpdateProfile.js","components/ForgotPassword/ForgotPassword.js","components/Header/Header.js","components/Input/Input.js","components/Buttons/MainButton/MainButton.js","components/Form/Form.js","components/SpinnerSmall/SpinnerSmall.js","components/TaskList/Task/Task.js","components/TaskList/TaskList.js","components/Buttons/FilterButton/FilterButton.js","components/Search/Search.js","components/Spinner/Spinner.js","containers/TodoApp/TodoAppFB.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","userId","setUserId","token","setToken","loading","setLoading","useEffect","onAuthStateChanged","user","getIdToken","then","uid","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Navigation","className","exact","to","SignUp","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","Card","style","maxWidth","Body","Alert","variant","onSubmit","Group","id","Label","Control","type","required","ref","Button","disabled","LogIn","LogOut","Profile","UpdateProfile","minWidth","promises","Promise","all","catch","finally","defaultValue","placeholder","ForgotPassword","message","setMessage","Header","aria-hidden","Input","forwardRef","props","changeHandler","labelText","htmlFor","onChange","target","MainButton","modifier","btnContent","labelContent","btnType","clicked","onClick","undefined","Form","addTask","task","setTask","autoComplete","test","String","console","log","SpinnerSmall","Task","completionStatusText","taskItemClasses","removeTask","idx","toggleCompletion","completed","name","taskId","TaskList","tasks","map","index","FilterButton","filterBtnClasses","filterBtnCntClasses","defaultActiveFilter","Search","enteredFilter","displayFilteredTasks","changeActiveFilter","classList","length","Spinner","TodoApp","setTasks","setDefaultActiveFilter","setEnteredFilter","inputRef","base_url","timer","setTimeout","usersTasksQuery","queryParams","axios","get","res","fetchedTasks","key","data","err","clearTimeout","itemsToDisplay","searchTab","filterWarning","filteredTasks","filter","toLocaleLowerCase","includes","selectedTasks","tasksLeft","item","some","other","deleteTasks","newTask","post","delete","newTasks","findIndex","updatedTasks","toggledTask","completion","patch","App","routes","path","component","TodoAppFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c875e475.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n});\r\n\r\nexport const auth = app.auth();\r\nexport default app;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { auth } from \"../firebase\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nfunction AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [userId, setUserId] = useState();\r\n  const [token, setToken] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut();\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email);\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email);\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setLoading(false);\r\n      setCurrentUser(user);\r\n      if (user) {\r\n        user.getIdToken(true).then((token) => {\r\n          setToken(token);\r\n        });\r\n        setUserId(user.uid);\r\n      }\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword,\r\n    token,\r\n    userId,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default AuthProvider;\r\n","import React from \"react\";\r\n\r\nimport \"./Navigation.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\nfunction Navigation() {\r\n  const { currentUser } = useAuth();\r\n\r\n  return (\r\n    <ul className=\"navigation\">\r\n      {currentUser ? (\r\n        <>\r\n          <NavLink\r\n            exact\r\n            className=\"navigation__item\"\r\n            to={`${process.env.PUBLIC_URL}`}\r\n          >\r\n            Task List\r\n          </NavLink>\r\n          <NavLink\r\n            className=\"navigation__item\"\r\n            to={`${process.env.PUBLIC_URL}/profile`}\r\n          >\r\n            Profile\r\n          </NavLink>\r\n          <NavLink\r\n            className=\"navigation__item\"\r\n            to={`${process.env.PUBLIC_URL}/logout`}\r\n          >\r\n            Log Out\r\n          </NavLink>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <NavLink\r\n            className=\"navigation__item\"\r\n            to={`${process.env.PUBLIC_URL}/signup`}\r\n          >\r\n            Sign Up\r\n          </NavLink>\r\n          <NavLink\r\n            className=\"navigation__item\"\r\n            to={`${process.env.PUBLIC_URL}/login`}\r\n          >\r\n            Log In\r\n          </NavLink>\r\n        </>\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { useAuth } from \"../../../contexts/AuthContext\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction SignUp() {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n\r\n  const { signup } = useAuth();\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\");\r\n    }\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await signup(emailRef.current.value, passwordRef.current.value);\r\n      history.push(`${process.env.PUBLIC_URL}`);\r\n    } catch {\r\n      setError(\"Failed to create an account\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ maxWidth: \"100%\" }}>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" required ref={emailRef}></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                required\r\n                ref={passwordRef}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                required\r\n                ref={passwordConfirmRef}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button disabled={loading} type=\"submit\" className=\"w-100\">\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Already have an account?{\" \"}\r\n        <Link to={`${process.env.PUBLIC_URL}/login`}>Log In</Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { useAuth } from \"../../../contexts/AuthContext\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction LogIn() {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n\r\n  const { login } = useAuth();\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await login(emailRef.current.value, passwordRef.current.value);\r\n      history.push(`${process.env.PUBLIC_URL}`);\r\n    } catch {\r\n      setError(\"Failed to log in\");\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ maxWidth: \"100%\" }}>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Log In</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" required ref={emailRef}></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                required\r\n                ref={passwordRef}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button disabled={loading} type=\"submit\" className=\"w-100\">\r\n              Log In\r\n            </Button>\r\n          </Form>\r\n          <div className=\"w-100 text-center mt-3\">\r\n            <Link to={`${process.env.PUBLIC_URL}/forgot-password`}>\r\n              Forgot Password?\r\n            </Link>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Need an account?{\" \"}\r\n        <Link to={`${process.env.PUBLIC_URL}/signup`}>Sign Up</Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LogIn;\r\n","import React, { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { useAuth } from \"../../../contexts/AuthContext\";\r\n\r\nfunction LogOut() {\r\n  //   const [error, setError] = useState(\"\");\r\n  const { logout } = useAuth();\r\n\r\n  //   async function handleLogout() {\r\n  //     setError(\"\");\r\n\r\n  //     try {\r\n  //       await logout();\r\n  //     } catch {\r\n  //       setError(\"Failed to log out\");\r\n  //     }\r\n  //   }\r\n\r\n  useEffect(() => {\r\n    logout();\r\n  }, [logout]);\r\n\r\n  return <Redirect to={`${process.env.PUBLIC_URL}/login`} />;\r\n}\r\n\r\nexport default LogOut;\r\n","import React from \"react\";\r\n\r\nimport { Card } from \"react-bootstrap\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Profile() {\r\n  // const [error, setError] = useState(\"\");\r\n  const { currentUser } = useAuth();\r\n  // const history = useHistory();\r\n  // async function handleLogout() {\r\n  //   setError(\"\");\r\n  //   try {\r\n  //     await logout();\r\n  //     history.push(`${process.env.PUBLIC_URL}/login`);\r\n  //   } catch {\r\n  //     setError(\"Failed to log out\");\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Profile</h2>\r\n          {/* {error && <Alert variant=\"danger\">{error}</Alert>} */}\r\n          <strong>{currentUser.email}</strong>\r\n          <Link\r\n            to={`${process.env.PUBLIC_URL}/update-profile`}\r\n            className=\"btn btn-primary w-100 mt-3\"\r\n          >\r\n            Update Profile\r\n          </Link>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        {/* <Button variant=\"link\" onClick={handleLogout}>\r\n          Log Out\r\n        </Button> */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction UpdateProfile() {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n  const { currentUser, updatePassword, updateEmail } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\");\r\n    }\r\n\r\n    const promises = [];\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    if (emailRef.current.value !== currentUser.email) {\r\n      promises.push(updateEmail(emailRef.current.value));\r\n    }\r\n    if (passwordRef.current.value) {\r\n      promises.push(updatePassword(passwordRef.current.value));\r\n    }\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        history.push(`${process.env.PUBLIC_URL}/profile`);\r\n        // alert/modal/text above input\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to update account\");\r\n        // dokładniej\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ minWidth: \"300px\" }}>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                defaultValue={currentUser.email}\r\n                ref={emailRef}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Leave blank to keep the same\"\r\n                ref={passwordRef}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Leave blank to keep the same\"\r\n                ref={passwordConfirmRef}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button disabled={loading} type=\"submit\" className=\"w-100\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        <Link to={`${process.env.PUBLIC_URL}`}>Cancel</Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpdateProfile;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction ForgotPassword() {\r\n  const emailRef = useRef();\r\n  const { resetPassword } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setMessage(\"\");\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await resetPassword(emailRef.current.value);\r\n      setMessage(\"Check Your inbox for further instructions\");\r\n    } catch {\r\n      setError(\"Failed to reset password\");\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ maxWidth: \"100%\" }}>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Password Reset</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          {message && <Alert variant=\"success\">{message}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" required ref={emailRef}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button disabled={loading} type=\"submit\" className=\"w-100\">\r\n              Reset Password\r\n            </Button>\r\n          </Form>\r\n          <div className=\"w-100 text-center mt-3\">\r\n            <Link to={`${process.env.PUBLIC_URL}/login`}>Login</Link>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Need an account?{\" \"}\r\n        <Link to={`${process.env.PUBLIC_URL}/signup`}>Sign Up</Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import React from \"react\";\r\n\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <h1 className=\"header\">\r\n      <span aria-hidden=\"true\" className=\"header__span\">\r\n        TO DO LIST\r\n      </span>\r\n      TO DO LIST\r\n      <span aria-hidden=\"true\" className=\"header__span\">\r\n        TO DO LIST\r\n      </span>\r\n    </h1>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { forwardRef } from \"react\";\r\nimport \"./Input.css\";\r\n\r\nconst Input = forwardRef((props, ref) => {\r\n  const { value, changeHandler, labelText } = props;\r\n\r\n  return (\r\n    <label htmlFor=\"input\" className=\"form__label\">\r\n      <input\r\n        ref={ref}\r\n        required\r\n        type=\"text\"\r\n        className=\"form__input\"\r\n        placeholder=\"&nbsp;\"\r\n        value={value}\r\n        onChange={(e) => {\r\n          changeHandler(e.target.value);\r\n        }}\r\n      />\r\n      <span className=\"form__spanLabel\">{labelText}</span>\r\n      <span className=\"form__focusBg\"></span>\r\n    </label>\r\n  );\r\n});\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport \"./MainButton.css\";\r\n\r\nconst MainButton = ({ btnContent, labelContent, btnType, clicked }) => {\r\n  let modifier;\r\n  if (btnType === \"delete\") {\r\n    modifier = \"buttonDelete\";\r\n  } else {\r\n    modifier = \"buttonBasic\";\r\n  }\r\n  return (\r\n    <button\r\n      type=\"submit\"\r\n      className={`button ${modifier}`}\r\n      onClick={btnType === \"delete\" ? clicked : undefined}\r\n    >\r\n      <span className=\"button__content\">{btnContent}</span>\r\n      <span className=\"button__glitch\"></span>\r\n      <span className=\"button__label\">{labelContent}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default MainButton;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nimport Input from \"../Input/Input\";\r\nimport MainButton from \"../Buttons/MainButton/MainButton\";\r\nimport \"./Form.css\";\r\n\r\nconst Form = ({ addTask }) => {\r\n  const [task, setTask] = useState(\"\");\r\n\r\n  const submitTask = (e) => {\r\n    e.preventDefault();\r\n    if (task && /\\S/.test(String(task))) {\r\n      addTask(task);\r\n      setTask(\"\");\r\n    } else {\r\n      console.log(\"Whitespace is not a valid input!\");\r\n      // alert/modal/text above input\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form autoComplete=\"off\" onSubmit={submitTask} className=\"form\">\r\n      <Input\r\n        value={task}\r\n        changeHandler={setTask}\r\n        labelText=\"Add the task samurai...\"\r\n      />\r\n      <MainButton\r\n        btnType=\"basic\"\r\n        btnContent=\"create new task_\"\r\n        labelContent=\"r25\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport \"./SpinnerSmall.css\";\r\n\r\nconst SpinnerSmall = () => {\r\n  return (\r\n    <div className=\"spinner--small\">\r\n      <div className=\"spinner--small__div\"></div>\r\n      <div className=\"spinner--small__div\"></div>\r\n      <div className=\"spinner--small__div\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpinnerSmall;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Task.css\";\r\nimport SmallSpinner from \"../../SpinnerSmall/SpinnerSmall\";\r\n\r\nconst Task = ({ task, removeTask, idx, toggleCompletion }) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  let completionStatusText, taskItemClasses;\r\n  if (task.completed) {\r\n    completionStatusText = \"DONE\";\r\n    taskItemClasses = \"task__item task__item--completed\";\r\n  } else {\r\n    completionStatusText = \"ACTIVE\";\r\n    taskItemClasses = \"task__item\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n  }, [task]);\r\n\r\n  const handleToggle = () => {\r\n    setLoading(true);\r\n    toggleCompletion(task.taskId);\r\n  };\r\n\r\n  return (\r\n    <li className={taskItemClasses}>\r\n      <div className=\"task__item__content\">{task.name}</div>\r\n      <div className=\"task__item__label\">{idx + 1}</div>\r\n      <div className=\"task__item__controls\">\r\n        <div\r\n          className=\"task__item__controls__toggleCompletion\"\r\n          onClick={handleToggle}\r\n        >\r\n          {loading ? <SmallSpinner /> : completionStatusText}\r\n        </div>\r\n        <div\r\n          className=\"task__item__controls__remove\"\r\n          onClick={() => removeTask(task.taskId)}\r\n        >\r\n          X\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport \"./TaskList.css\";\r\nimport Task from \"./Task/Task\";\r\n\r\nconst TaskList = ({ tasks, removeTask, toggleCompletion }) => {\r\n  return (\r\n    <ul className=\"task__list\">\r\n      {tasks.map((task, index) => (\r\n        <Task\r\n          key={task.taskId}\r\n          task={task}\r\n          removeTask={removeTask}\r\n          toggleCompletion={toggleCompletion}\r\n          idx={index}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React from \"react\";\r\nimport \"./FilterButton.css\";\r\n\r\nconst FilterButton = ({\r\n  btnContent,\r\n  labelContent,\r\n  clicked,\r\n  defaultActiveFilter,\r\n}) => {\r\n  let filterBtnClasses = \"filter__button\",\r\n    filterBtnCntClasses = \"filter__button__content\";\r\n  if (defaultActiveFilter === btnContent) {\r\n    filterBtnClasses = \"filter__button filter__button--active\";\r\n    filterBtnCntClasses =\r\n      \"filter__button__content filter__button__content--active\";\r\n  }\r\n\r\n  return (\r\n    <button type=\"submit\" className={filterBtnClasses} onClick={clicked}>\r\n      <span className={filterBtnCntClasses}>{btnContent}</span>\r\n      <span className=\"filter__button__label\">{labelContent}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FilterButton;\r\n","import React, { forwardRef } from \"react\";\r\n\r\nimport Input from \"../Input/Input\";\r\nimport \"./Search.css\";\r\nimport FilterButton from \"../Buttons/FilterButton/FilterButton\";\r\n\r\nconst Search = forwardRef((props, ref) => {\r\n  const {\r\n    tasks,\r\n    enteredFilter,\r\n    displayFilteredTasks,\r\n    defaultActiveFilter,\r\n    changeActiveFilter,\r\n  } = props;\r\n\r\n  const classList = tasks.length ? \"search--visible\" : \"search--hidden\";\r\n\r\n  return (\r\n    <div className={classList}>\r\n      <form\r\n        autoComplete=\"off\"\r\n        className=\"form\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n        }}\r\n      >\r\n        <Input\r\n          ref={ref}\r\n          value={enteredFilter}\r\n          changeHandler={displayFilteredTasks}\r\n          labelText=\"Find task...\"\r\n        />\r\n      </form>\r\n      <div className=\"filter\">\r\n        <FilterButton\r\n          btnContent=\"all\"\r\n          labelContent=\"r26\"\r\n          defaultActiveFilter={defaultActiveFilter}\r\n          clicked={() => changeActiveFilter(\"all\")}\r\n        />\r\n        <FilterButton\r\n          btnContent=\"active\"\r\n          labelContent=\"r27\"\r\n          defaultActiveFilter={defaultActiveFilter}\r\n          clicked={() => changeActiveFilter(\"active\")}\r\n        />\r\n        <FilterButton\r\n          btnContent=\"done\"\r\n          labelContent=\"r28\"\r\n          defaultActiveFilter={defaultActiveFilter}\r\n          clicked={() => changeActiveFilter(\"done\")}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <div className=\"spinner__div\"></div>\r\n      <div className=\"spinner__div\"></div>\r\n      <div className=\"spinner__div\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import { useState, useEffect, useRef } from \"react\";\r\n// import { v4 as uuid_v4 } from \"uuid\";\r\nimport axios from \"axios\";\r\n// import app from \"../../firebase\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport \"./TodoApp.css\";\r\nimport Form from \"../../components/Form/Form\";\r\nimport TaskList from \"../../components/TaskList/TaskList\";\r\nimport Search from \"../../components/Search/Search\";\r\nimport MainButton from \"../../components/Buttons/MainButton/MainButton\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\n\r\nconst TodoApp = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [defaultActiveFilter, setDefaultActiveFilter] = useState(\"all\");\r\n  const [enteredFilter, setEnteredFilter] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const { token, userId } = useAuth();\r\n\r\n  const inputRef = useRef();\r\n  // const base_url = `${app.databaseURL}`;\r\n  // console.log(base_url);\r\n\r\n  const base_url =\r\n    \"https://todo-8951d-default-rtdb.europe-west1.firebasedatabase.app/\";\r\n\r\n  // Get tasks from Firebase on first render and everytime search input changes (after 0.5s delay to reduce number of requests)\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const timer = setTimeout(() => {\r\n      if (enteredFilter === inputRef.current.value) {\r\n        if (token) {\r\n          const usersTasksQuery = `/todos.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n          const queryParams =\r\n            enteredFilter.length === 0\r\n              ? usersTasksQuery\r\n              : `${usersTasksQuery}&orderBy=\"title\"&equalTo=\"${enteredFilter}\"`;\r\n          axios\r\n            .get(base_url + queryParams)\r\n            .then((res) => {\r\n              const fetchedTasks = [];\r\n              for (const key in res.data) {\r\n                fetchedTasks.push({\r\n                  taskId: key,\r\n                  ...res.data[key],\r\n                });\r\n              }\r\n              setTasks(fetchedTasks);\r\n              setLoading(false);\r\n            })\r\n            .catch((err) => {\r\n              setLoading(false);\r\n              console.log(err);\r\n            });\r\n        }\r\n      }\r\n    }, 500);\r\n    return () => clearTimeout(timer);\r\n  }, [token, userId, enteredFilter, base_url]);\r\n\r\n  // Add Task\r\n  const addTask = (task) => {\r\n    let newTask = {\r\n      name: task,\r\n      completed: false,\r\n      userId: userId,\r\n    };\r\n    axios\r\n      .post(`${base_url}/todos.json?auth=` + token, newTask)\r\n      .then((res) => {\r\n        newTask = { ...newTask, taskId: res.data.name };\r\n        setTasks((tasks) => {\r\n          return [...tasks, newTask];\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  // Delete Task\r\n  const deleteTask = (taskId) => {\r\n    setLoading(true);\r\n    axios\r\n      .delete(`${base_url}/todos/${taskId}.json?auth=${token}`)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        const newTasks = tasks.filter((task) => task.taskId !== taskId);\r\n        setTasks(newTasks);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // Delete selected tasks\r\n  const deleteTasks = (selectedTasks) => {\r\n    // const tasksToDelete = [];\r\n    const tasksLeft = [...tasks].filter(\r\n      (item) => !selectedTasks.some((other) => item.id === other.id)\r\n    );\r\n    setTasks(tasksLeft);\r\n  };\r\n\r\n  // Toggle completion state\r\n  const toggleTask = (taskId) => {\r\n    const index = tasks.findIndex((task) => task.taskId === taskId);\r\n    const updatedTasks = [...tasks];\r\n    const toggledTask = { ...tasks[index] };\r\n    toggledTask.completed = !toggledTask.completed;\r\n    updatedTasks[index] = toggledTask;\r\n    let completion = {\r\n      completed: toggledTask.completed,\r\n    };\r\n    // setLoading(true);\r\n    axios\r\n      .patch(`${base_url}/todos/${taskId}/.json?auth=${token}`, completion)\r\n      .then((res) => {\r\n        // setLoading(false);\r\n        setTasks(updatedTasks);\r\n      })\r\n      .catch((err) => {\r\n        // setLoading(false);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // Filtering tasks\r\n  const filteredTasks =\r\n    tasks &&\r\n    tasks.filter((task) => {\r\n      return task.name.toLocaleLowerCase().includes(enteredFilter);\r\n    });\r\n\r\n  let itemsToDisplay;\r\n\r\n  if (defaultActiveFilter === \"all\") {\r\n    itemsToDisplay = filteredTasks;\r\n  } else if (defaultActiveFilter === \"done\") {\r\n    itemsToDisplay = filteredTasks.filter((task) => task.completed);\r\n  } else {\r\n    itemsToDisplay = filteredTasks.filter((task) => !task.completed);\r\n  }\r\n\r\n  // Show searchbar if there is at least 1 task\r\n  let searchTab, filterWarning, deleteBtn;\r\n  // if (tasks.length > 0) {\r\n\r\n  // }\r\n  searchTab = (\r\n    <Search\r\n      tasks={tasks}\r\n      ref={inputRef}\r\n      defaultActiveFilter={defaultActiveFilter}\r\n      changeActiveFilter={(filter) => setDefaultActiveFilter(filter)}\r\n      enteredFilter={enteredFilter}\r\n      displayFilteredTasks={(filter) =>\r\n        setEnteredFilter(filter.toLocaleLowerCase())\r\n      }\r\n    />\r\n  );\r\n\r\n  // Show warning message if there are no matches found through filters and there are still tasks to display with different filters\r\n  if (!itemsToDisplay.length && tasks.length) {\r\n    filterWarning = <p>No matches found</p>;\r\n  }\r\n\r\n  // Render delete button if there are any selected tasks\r\n  deleteBtn = itemsToDisplay.length ? (\r\n    <MainButton\r\n      btnType=\"delete\"\r\n      btnContent=\"delete selected tasks_\"\r\n      labelContent=\"r29\"\r\n      clicked={() => deleteTasks(itemsToDisplay)}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className=\"TodoApp\">\r\n      <Form addTask={addTask} />\r\n      {searchTab}\r\n      {filterWarning}\r\n      <TaskList\r\n        tasks={itemsToDisplay}\r\n        removeTask={deleteTask}\r\n        toggleCompletion={toggleTask}\r\n      />\r\n      {loading ? <Spinner /> : null}\r\n      {/* {deleteBtn} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoApp;\r\n","import \"./App.css\";\r\n\r\nimport { useAuth } from \"./contexts/AuthContext\";\r\n\r\nimport Navigation from \"./components/Navbar/Navigation\";\r\nimport SignUp from \"./components/Auth/SignUp/SignUp\";\r\nimport LogIn from \"./components/Auth/LogIn/LogIn\";\r\nimport LogOut from \"./components/Auth/LogOut/LogOut.js\";\r\nimport Profile from \"./components/Profile/Profile.js\";\r\nimport UpdateProfile from \"./components/UpdateProfile/UpdateProfile.js\";\r\nimport ForgotPassword from \"./components/ForgotPassword/ForgotPassword.js\";\r\nimport Header from \"./components/Header/Header\";\r\nimport TodoAppFB from \"./containers/TodoApp/TodoAppFB\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n// import PrivateRoute from \"./hoc/PrivateRoute\";\r\n\r\nconst App = () => {\r\n  const { currentUser } = useAuth();\r\n  // const envPath = process.env.PUBLIC_URL;\r\n\r\n  const routes = currentUser ? (\r\n    <Switch>\r\n      <Route exact path={`${process.env.PUBLIC_URL}`} component={TodoAppFB} />\r\n      <Route path={`${process.env.PUBLIC_URL}/profile`} component={Profile} />\r\n      <Route\r\n        path={`${process.env.PUBLIC_URL}/update-profile`}\r\n        component={UpdateProfile}\r\n      />\r\n      <Route path={`${process.env.PUBLIC_URL}/logout`} component={LogOut} />\r\n      <Redirect to={`${process.env.PUBLIC_URL}`} />\r\n    </Switch>\r\n  ) : (\r\n    <Switch>\r\n      <Route path={`${process.env.PUBLIC_URL}/signup`} component={SignUp} />\r\n      <Route path={`${process.env.PUBLIC_URL}/login`} component={LogIn} />\r\n      <Route\r\n        path={`${process.env.PUBLIC_URL}/forgot-password`}\r\n        component={ForgotPassword}\r\n      />\r\n      <Redirect to={`${process.env.PUBLIC_URL}/login`} />\r\n    </Switch>\r\n  );\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Router>\r\n        <Navigation />\r\n        {routes}\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport AuthProvider from \"./contexts/AuthContext\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <AuthProvider>\r\n    <App />\r\n  </AuthProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}